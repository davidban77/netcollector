[tool.poetry]
name = "netcollector"
version = "0.1.0"
description = ""
authors = ["Network to Code, LLC <info@networktocode.com>"]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^1.9.0"
netmiko = "^4.1.0"
junos-eznc = "^2.6.3"
line-protocol-parser = "^1.1.1"
genie = "^22.4"
pyats = "^22.4"

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
pydocstyle = "*"
pylint = "*"
yamllint = "*"
flake8 = "*"

[tool.prefect_demo]
# extra_compose_files = ["./docker-compose.beats.yml"]

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.MASTER]
ignore-paths = [ ".*venv.*" ]

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    bad-continuation,
    duplicate-code
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
